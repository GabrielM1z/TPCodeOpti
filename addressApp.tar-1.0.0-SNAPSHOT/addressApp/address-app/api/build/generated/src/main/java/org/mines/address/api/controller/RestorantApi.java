/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.mines.address.api.controller;

import org.mines.address.api.model.Restorant;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-04-16T16:57:55.596546+02:00[Europe/Paris]")
@Validated
@Tag(name = "restorant", description = "the restorant API")
public interface RestorantApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /restorant : Create a restorant
     *
     * @param restorant  (required)
     * @return Null response (status code 201)
     */
    @Operation(
        operationId = "createRestorant",
        summary = "Create a restorant",
        tags = { "restorant" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Null response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Restorant.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/restorant",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Restorant> createRestorant(
        @Parameter(name = "Restorant", description = "", required = true) @Valid @RequestBody Restorant restorant
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"rate\" : 0, \"name\" : \"name\", \"category\" : \"category\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /restorant : List all restorants
     *
     * @return An array of restorant (status code 200)
     */
    @Operation(
        operationId = "listRestorants",
        summary = "List all restorants",
        tags = { "restorant" },
        responses = {
            @ApiResponse(responseCode = "200", description = "An array of restorant", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Restorant.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/restorant",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Restorant>> listRestorants(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"rate\" : 0, \"name\" : \"name\", \"category\" : \"category\" }, { \"rate\" : 0, \"name\" : \"name\", \"category\" : \"category\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
