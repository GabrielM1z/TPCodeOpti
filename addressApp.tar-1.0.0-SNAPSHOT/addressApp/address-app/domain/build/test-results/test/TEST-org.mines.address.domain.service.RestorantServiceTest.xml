<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.mines.address.domain.service.RestorantServiceTest" tests="2" skipped="0" failures="1" errors="0" timestamp="2024-04-16T14:31:39" hostname="LAPTOP-KESRG1B1" time="0.445">
  <properties/>
  <testcase name="shouldNotSaveARestorant()" classname="org.mines.address.domain.service.RestorantServiceTest" time="0.325">
    <failure message="org.mockito.exceptions.misusing.InvalidUseOfMatchersException: &#10;Misplaced or misused argument matcher detected here:&#10;&#10;-&gt; at org.mines.address.domain.service.PeopleServiceTest.shouldSaveAPeople(PeopleServiceTest.java:44)&#10;&#10;You cannot use argument matchers outside of verification or stubbing.&#10;Examples of correct usage of argument matchers:&#10;    when(mock.get(anyInt())).thenReturn(null);&#10;    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());&#10;    verify(mock).someMethod(contains(&quot;foo&quot;))&#10;&#10;This message may appear after an NullPointerException if the last matcher is returning an object &#10;like any() but the stubbed method signature expect a primitive argument, in this case,&#10;use primitive alternatives.&#10;    when(mock.get(any())); // bad use, will raise NPE&#10;    when(mock.get(anyInt())); // correct usage use&#10;&#10;Also, this error might show up because you use argument matchers with methods that cannot be mocked.&#10;Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().&#10;Mocking methods declared on non-public parent classes is not supported.&#10;" type="org.mockito.exceptions.misusing.InvalidUseOfMatchersException">org.mockito.exceptions.misusing.InvalidUseOfMatchersException: 
Misplaced or misused argument matcher detected here:

-&gt; at org.mines.address.domain.service.PeopleServiceTest.shouldSaveAPeople(PeopleServiceTest.java:44)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(any());
    verify(mock).someMethod(contains(&quot;foo&quot;))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.

	at app//org.mockito.junit.jupiter.MockitoExtension.beforeEach(MockitoExtension.java:160)
	at java.base@21.0.2/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base@21.0.2/java.util.ArrayList.forEach(ArrayList.java:1596)
	Suppressed: java.lang.NullPointerException: Cannot invoke &quot;java.util.Set.forEach(java.util.function.Consumer)&quot; because the return value of &quot;org.junit.jupiter.api.extension.ExtensionContext$Store.remove(Object, java.lang.Class)&quot; is null
		at org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:194)
		... 2 more
</failure>
  </testcase>
  <testcase name="shouldSaveARestorant()" classname="org.mines.address.domain.service.RestorantServiceTest" time="0.119"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
